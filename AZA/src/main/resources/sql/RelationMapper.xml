<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="RelationMapper">
 	
 	
	<resultMap id="relationSelectMap" type="user">
		<result property="relationCode" 			column="relation_code" 			jdbcType="INTEGER"/>
		<result property="firstStudentId" 			column="student_id" 			jdbcType="VARCHAR" />
		<result property="userId" 					column="parent_id" 				jdbcType="VARCHAR" />
		<result property="relationName"				column="relation_name" 			jdbcType="VARCHAR" />
	</resultMap>
	
		<!-- Relation : INSERT -->
	<insert 	id="addRelation" >							
		INSERT
		INTO relation
		VALUES (
				seq_relation_relation_code.NEXTVAL,
				#{firstStudentId},
				#{userId},
				#{relationName}
			)		
	</insert>
	
	<!-- Relation : SELECT (select parent by studentId student기준으로 관계있는 부모 불러오기-->
	<select		id="getRelation" resultMap="relationSelectMap">
		SELECT
		rr.student_id, rr.parent_id, rr.parent_name, rr.relation_name
		FROM users uu, (SELECT
				u.user_name, r.student_id, (SELECT user_name FROM users WHERE user_id = r.parent_id) parent_name, r.parent_id, r.relation_name
				FROM users u, relation r
				WHERE u.user_id = r.student_id AND r.student_id = #{firstStudentId}) rr
		WHERE rr.student_id = uu.user_id AND rr.parent_id = #{userId}
	</select>
	
		<!-- Relation : SELECT (select student by parentId 부모기준으로 관계있는 학생 불러오기-->
	<select		id="getRelation2" resultMap="relationSelectMap">
		SELECT
		*
		FROM users uu, (SELECT
				u.user_name, r.student_id, (SELECT user_name FROM users WHERE user_id = r.student_id) student_name, r.parent_id, r.relation_name
				FROM users u, relation r
				WHERE u.user_id = r.parent_id AND r.parent_id = #{userId}) rr
		WHERE rr.student_name = uu.user_name AND rr.student_id = #{firstStudentId}
	</select>
	
	<!-- Relation : UPDATE -->
	<update		id="updateRelation" >
		UPDATE relation
		<set>
			relation_name = #{relationName}
		</set>
		WHERE parent_Id = #{userId} AND student_id = #{firstStudentId}
	</update>
	
	<!-- Relation : DELETE -->
	 <delete	id="deleteRelation"	parameterType="String" >
		DELETE FROM relation
		WHERE student_id = #{userId} OR parent_id = #{userId}
	 </delete>
	 
	<!-- Relation : list -->
	<select id="listRelation" resultMap="relationSelectMap">
		SELECT
		u.user_name, (SELECT user_name FROM users WHERE user_id = r.student_id) student_name, r.parent_id, r.relation_name
		FROM users u, relation r
		WHERE u.user_id = r.parent_id AND r.parent_id = #{userId}
	</select>	 
	 
</mapper>