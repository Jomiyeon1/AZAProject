<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="HomeworkMapper">

	<resultMap id="HomeworkSelectMap" type="paper">
		<result property="homeworkCode" column="homework_code" jdbcType="NUMERIC" />
		<result property="studentId" column="student_id" jdbcType="VARCHAR" />
		<result property="lessonCode" column="lesson_code" jdbcType="VARCHAR" />
		<result property="homeworkTitle" column="homework_title" jdbcType="VARCHAR" />
		<result property="homeworkContent" column="homework_contents" jdbcType="VARCHAR" />
		<result property="homeworkDueDate" column="homework_due_date" jdbcType="DATE" />
		<result property="homeworkCheck" column="homework_check" jdbcType="CHAR" />
		<result property="homeworkCreateAt" column="homework_create_at" jdbcType="VARCHAR" />
	</resultMap>


	<!-- HOMEWORK :: INSERT -->
	<insert id="addPaperHomework">
	INSERT INTO homework(homework_code, student_id, lesson_code, homework_title,
	homework_contents, homework_due_date, homework_check, homework_create_at)
	VALUES(seq_homework_homework_code.NEXTVAL,
	 		 #{studentId},
	 		 #{lessonCode},
	 		 #{homeworkTitle},
	 		 #{homeworkContent},
	 		 #{homeworkDueDate},
	 		 #{homeworkCheck},
	 		 TO_CHAR(sysdate, 'yyyy/mm/dd HH24:MI:SS')
	 )
	</insert>
	
	
	<!-- HOMEWORK :: SELECT -->
	<select id="getPaperHomework" parameterType="int" resultMap="HomeworkSelectMap">
		SELECT *
		FROM homework
		WHERE homework_code = #{homeworkCode}
	</select>


	<!-- HOMEWORK :: UPDATE -->
	<update id="updatePaperHomework" parameterType="paper">
	UPDATE homework
	<set>
		homework_title = #{homeworkTitle},
		homework_contents= #{homeworkContent},
		homework_due_date= #{homeworkDueDate}	
	</set>
	WHERE homework_code = #{homeworkCode}
	</update>
	
	
	<!-- HOMEWORKCHECK :: UPDATE -->
	<update id="updatePaperHomeworkCheck" parameterType="int">
	UPDATE homework
	<set>
		homework_check = '1'
	</set>
	WHERE homework_code = #{homeworkCode}	
	</update>
	

	<!-- HOMEWORK :: DELETE  -->
	<delete id="deletePaperHomework">
	DELETE homework
	WHERE homework_code = #{homeworkCode}
	</delete>
	
		
	<!--  HOMEWORK:: LIST  -->
	<select id="listPaperHomeworkByTeacher" resultMap="HomeworkSelectMap">
		SELECT * 
		FROM (
		    SELECT inner_table.*, ROWNUM AS row_seq
		    FROM ( SELECT 
					homework_code,
					(SELECT lesson_name FROM lesson WHERE lesson_code = #{lessonCode}) lesson_name, 
					homework_title, (SELECT user_name FROM users WHERE user_id = student_id) student_name,
					homework_create_at, homework_due_date, homework_check
					FROM homework
					<if test="searchCondition != null">
						<where>
							<if test="searchCondition == 3 and searchKeyword != '' ">
								lesson_code = #{lessonCode}
							</if>
						</where>
					</if>
					ORDER BY  homework_create_at DESC  ) inner_table 
		    WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<!--  HOMEWORK:: LIST  -->
	<select id="listPaperHomeworkByStudent" resultMap="HomeworkSelectMap">
		SELECT * 
		FROM (
		    SELECT inner_table.*, ROWNUM AS row_seq
		    FROM ( SELECT 
					homework_code,
					(SELECT lesson_name FROM lesson WHERE lesson_code = #{lessonCode}) lesson_name, 
					homework_title, (SELECT user_name FROM users WHERE user_id = #{searchId}) student_name,
					homework_create_at, homework_due_date, homework_check
					FROM homework
					WHERE student_id = #{searchId}
					<if test="searchCondition != null">
						<where>
							<!-- <if test="searchCondition == 0 and searchKeyword != '' ">
								student_id = #{searchId}
							</if> -->
							<if test="searchCondition == 3 and searchKeyword != '' ">
								lesson_code = #{lessonCode}
							</if>
						</where>
					</if>
					ORDER BY  homework_create_at DESC  ) inner_table 
		    WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}
	</select>
	
	<!-- HOMEWORKLIST :: TOTALCOUNT -->
	<select id="getListPaperHomeworkByTeacherTotalCount" resultType="int">
		SELECT COUNT(*) 
		FROM (  SELECT 
				homework_code,
				(SELECT lesson_name FROM lesson WHERE lesson_code = #{lessonCode}) lesson_name, 
				homework_title, (SELECT user_name FROM users WHERE user_id = student_id) student_name,
				homework_create_at, homework_due_date, homework_check
				FROM homework
				<if test="searchCondition != null">
					<where>
						<!-- <if test="searchCondition == 0 and searchKeyword != '' ">
							student_id = #{searchId}
						</if> -->
						<if test="searchCondition == 3 and searchKeyword != '' ">
							lesson_code = #{lessonCode}
						</if>
					</where>
				</if>
	            ORDER BY  homework_create_at DESC ) countTable	
	</select>
	
	<!-- HOMEWORKLIST :: TOTALCOUNT -->
	<select id="getListPaperHomeworkByStudentTotalCount" resultType="int">
		SELECT COUNT(*) 
		FROM (  SELECT 
				homework_code,
				(SELECT lesson_name FROM lesson WHERE lesson_code = #{lessonCode}) lesson_name, 
				homework_title, (SELECT user_name FROM users WHERE user_id = student_id) student_name,
				homework_create_at, homework_due_date, homework_check
				FROM homework
				WHERE student_id = #{searchId}
				<if test="searchCondition != null">
					<where>
						<!-- <if test="searchCondition == 0 and searchKeyword != '' ">
							student_id = #{searchId}
						</if> -->
						<if test="searchCondition == 3 and searchKeyword != '' ">
							lesson_code = #{lessonCode}
						</if>
					</where>
				</if>
	            ORDER BY  homework_create_at DESC ) countTable	
	</select>
	
	

</mapper>